name: Generate and Commit Changes

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Restore dependencies
      run: dotnet restore src/Humidifier.CodeGen/Humidifier.CodeGen.csproj 

    - name: Run the C# program to generate library and get spec version
      run: dotnet run --project src/Humidifier.CodeGen/Humidifier.CodeGen.csproj -directory $GITHUB_WORKSPACE --framework net8.0

    - name: Combine version numbers
      if: steps.git_diff.outputs.changes == 'true'
      run: |
        VERSION=$(cat src/version.txt)
        SPEC_VERSION=$(cat src/spec-version.txt | tr -d '.')
        FINAL_VERSION="${VERSION}.${SPEC_VERSION}"
        echo "FINAL_VERSION=$FINAL_VERSION" >> $GITHUB_ENV

    - name: Check for changes
      id: git_diff
      run: |
        git config --global user.email "RonSijm@Github.Action"
        git config --global user.name "Ron Sijm"
        git add *
        if git diff-index --quiet HEAD --; then
          echo "No changes detected"
          echo "::set-output name=changes::false"
        else
          echo "Changes detected"
          echo "::set-output name=changes::true"
        fi

    - name: Commit changes
      if: steps.git_diff.outputs.changes == 'true'
      run: |
        git commit -am "Automated update of generated library version ${{ env.FINAL_VERSION }}"
        git push origin master
        
    - name: Restore dependencies of Humidifier
      if: steps.git_diff.outputs.changes == 'true'
      run: dotnet restore src/Humidifier/Humidifier.csproj

    - name: Restore dependencies of Humidifier.Json
      if: steps.git_diff.outputs.changes == 'true'
      run: dotnet restore src/Humidifier.Json/Humidifier.Json.csproj

    - name: Combine version numbers
      if: steps.git_diff.outputs.changes == 'true'
      run: |
        VERSION=$(cat src/version.txt)
        SPEC_VERSION=$(cat src/spec-version.txt | tr -d '.')
        FINAL_VERSION="${VERSION}.${SPEC_VERSION}"
        echo "FINAL_VERSION=$FINAL_VERSION" >> $GITHUB_ENV

    - name: Build Humidifier
      if: steps.git_diff.outputs.changes == 'true'
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        FINAL_VERSION: ${{ env.FINAL_VERSION }}
      run: dotnet build src/Humidifier --configuration Release -o "./packages" /p:PackageVersion=$FINAL_VERSION
    
    - name: Build Humidifier.Json
      if: steps.git_diff.outputs.changes == 'true'
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        FINAL_VERSION: ${{ env.FINAL_VERSION }}
      run: dotnet build src/Humidifier.Json --configuration Release -o "./packages" /p:PackageVersion=$FINAL_VERSION
      
    - name: Publish to NuGet
      if: steps.git_diff.outputs.changes == 'true'
      env:
        NUGET_API_KEY: ${{secrets.NUGET_API_KEY}}
      run: dotnet nuget push -s https://www.nuget.org/api/v2/package -k $NUGET_API_KEY --skip-duplicate
        ./packages/*.nupkg
        